{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","About","NotFound","Test","state","title","body","_this2","this","fetch","then","response","json","data","setState","console","log","_this$state","Component","Context","React","createContext","reducer","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","stop","children","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","onShowClick","e","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75c97ef3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropsTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    // <div>\r\n    //   {/* <h1 style={{ color: \"#f00\", fontSize: \"50px\" }}>{branding}</h1> */}\r\n    //   {/* <h1 style={headingStyle}>{branding}</h1> */}\r\n    //   <h1>{branding}</h1>\r\n    // </div>\r\n\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropsTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: \"#0f0\",\r\n//   fontSize: \"66px\"\r\n// };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 Page Not Found</span>\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"componentWillMount...\");\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: \"John Doe\",\r\n      //   email: \"jdoe@gmail.com\",\r\n      //   phone: \"555-555-5555\"\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: \"Karen Williams\",\r\n      //   email: \"karen@gmail.com\",\r\n      //   phone: \"666-666-6666\"\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: \"Henry Johnson\",\r\n      //   email: \"henry@gmail.com\",\r\n      //   phone: \"777-777-7777\"\r\n      // }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropsTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n// import \"./contact.css\";\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    contact: PropsTypes.object.isRequired\r\n    // deleteClickHandler: PropsTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // this.props.deleteClickHandler();\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n\r\n    // dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    // console.log(id);\r\n    // console.log(dispatch);\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  render() {\r\n    // const { name, email, phone } = this.props;\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"poiter\", float: \"right\", color: \"#f00\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Contact.propTypes = {\r\n//   name: PropsTypes.string.isRequired,\r\n//   email: PropsTypes.string.isRequired,\r\n//   phone: PropsTypes.string.isRequired\r\n// };\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state;\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n  //   this.setState({\r\n  //     contacts: newContacts\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact List</span>\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  // name={contact.name}\r\n                  // email={contact.email}\r\n                  // phone={contact.phone}\r\n                  contact={contact}\r\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    console.log(newContact);\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    // dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layout/Header\";\n\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport Test from \"./components/test/Test\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}